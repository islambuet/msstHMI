<div class="row">
    <div class="col-md-10">
        <div class="alert alert-warning alert-dismissible fade show" id="alert_message_container" role="alert" style="display: none;">
            <p class="mb-0" id="alert_message"></p>
            <button type="button" class="close alert-close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-3"><h5>From</h5></div>
    <div class="col-md-3"><h5>To</h5></div>
</div>
<div class="row">
    <div class="col-md-3">
        <div class="row">
            <div class="col-md-6 pr-0">
                <input type="text" class="form-control" id="from_date" placeholder="From date">
            </div>
            <div class="col-md-3 pl-1 pr-0">
                <select class="form-control" id="from_date_hour"></select>
            </div>
            <div class="col-md-3 pl-1 pr-0">
                <select class="form-control" id="from_date_minute"></select>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="row">
            <div class="col-md-6 pr-0">
                <input type="text" class="form-control" id="to_date" placeholder="To date">
            </div>
            <div class="col-md-3 pl-1 pr-0">
                <select class="form-control" id="to_date_hour"></select>
            </div>
            <div class="col-md-3 pl-1 pr-0">
                <select class="form-control" id="to_date_minute"></select>
            </div>
        </div>
    </div>
    <div class="col-md-4 pr-0">
        <div class="row">
            <div class="col-md-2 pr-0">
                <button type="button" class="btn btn-primary form-control" id="button_filter">Filter</button>
            </div>
        </div>
    </div>
</div>
<footer id="footer" class="container-fluid">
    <%- include('../components/statistics_footer') %>
</footer>
<script>
    /* global basic_info */
    /* global ipcRenderer */
    /* global getPaginationHtml */
    let intervalForGetStatisticsCounters;
    function systemPageLoaded(){
        for (let i = 0; i < 24; i++) {
            let option= '<option value="' +(i<10?'0':'')+ i + '">' + (i<10?'0':'')+i+ '</option>';
            $("#from_date_hour").append(option);
            $("#to_date_hour").append(option);
        }
        for (let i = 0; i < 60; i++) {
            let option= '<option value="' +(i<10?'0':'')+ i + '">' + (i<10?'0':'')+i+ '</option>';
            $("#from_date_minute").append(option);
            $("#to_date_minute").append(option);
        }
        $("#from_date").datepicker({
            autoclose: true,
            format: 'mm-dd-yyyy',
            orientation: "bottom right"
        });
        $("#to_date").datepicker({
            autoclose: true,
            format: 'mm-dd-yyyy',
            orientation: "bottom right",
        });
        $('#from_date').datepicker('update', moment().subtract(6, 'days').format('MM-DD-YYYY'));
        $('#button_filter').trigger('click')
    }
    $(document).on('click','#button_filter',function (event){
        filterShift();
    })
    function filterShift(){
        $("#alert_message_container").hide();
        let from_timestamp = moment($('#from_date').val()+" "+$("#from_date_hour").val()+":"+$("#from_date_minute").val(), "MM-DD-YYYY HH:mm").unix();
        let to_timestamp = moment($('#to_date').val()+" "+$("#to_date_hour").val()+":"+$("#to_date_minute").val(), "MM-DD-YYYY HH:mm").unix();
        let requestData = [
            {
                'name': 'statistics_counter',
                'params': {
                }
            },
        ];
        let error_message='';
        if(Number.isInteger(from_timestamp)){
            requestData[0]['params']['from_timestamp']=from_timestamp;
            if($('#from_date').val()==''){
                error_message+="No From Date Selected.";
            }
        }
        else{
            error_message+="Invalid From Date";
        }
        if(Number.isInteger(to_timestamp)){
            requestData[0]['params']['to_timestamp']=to_timestamp;
            if($('#to_date').val()==''){
                error_message+="No To Date Selected.";
            }
        }

        if(error_message==''){
            if(basic_info['connected']) {
                if(intervalForGetStatisticsCounters !=undefined){
                    clearInterval(intervalForGetStatisticsCounters);
                }
                //$('#system_loading').show()
                //dataTable.clear().search('').draw();
                ipcRenderer.send("sendRequestToServer", "getStatisticsCounters", {}, requestData);
                intervalForGetStatisticsCounters=setInterval(() => {
                    ipcRenderer.send("sendRequestToServer", "getStatisticsCounters", {}, requestData);
                }, 2000);
            }
            else{
                $("#alert_message").html("<b>Server Not connected</b>");
                $("#alert_message_container").show();
            }
        }
        else{
            $("#alert_message").html(error_message);
            $("#alert_message_container").show();
        }
    }
    ipcRenderer.on("getStatisticsCounters", function(e, jsonObject) {
        //$('#system_loading').hide()
        //console.log(jsonObject)

    })
</script>